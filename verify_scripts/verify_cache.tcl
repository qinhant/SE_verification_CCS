analyze -sva ./SE_verilog/SE_cache.v

elaborate -top SE -bbox_mul 256

#specify clock and reset
clock clock
reset reset -non_resettable_regs 0

#specify source and destination of information flow
check_spv -create -from {seoperation_io_op1_input seoperation_io_op2_input seoperation_io_cond_input aes_cipher.CipherRoundARK_io_roundKey_0 aes_cipher.CipherRoundARK_io_roundKey_1 aes_cipher.CipherRoundARK_io_roundKey_2 aes_cipher.CipherRoundARK_io_roundKey_3 aes_cipher.CipherRoundARK_io_roundKey_4 aes_cipher.CipherRoundARK_io_roundKey_5 aes_cipher.CipherRoundARK_io_roundKey_6 aes_cipher.CipherRoundARK_io_roundKey_7 aes_cipher.CipherRoundARK_io_roundKey_8 aes_cipher.CipherRoundARK_io_roundKey_9 aes_cipher.CipherRoundARK_io_roundKey_10 aes_cipher.CipherRoundARK_io_roundKey_11 aes_cipher.CipherRoundARK_io_roundKey_12 aes_cipher.CipherRoundARK_io_roundKey_13 aes_cipher.CipherRoundARK_io_roundKey_14 aes_cipher.CipherRoundARK_io_roundKey_15} -to {io_out_valid io_out_result}

#initialize the cache to arbitrary state
abstract -init_value {cache_valid_0 cache_valid_1 cache_valid_2 cache_valid_3 cache_valid_4 cache_valid_5 cache_valid_6 cache_valid_7 cache_valid_8 cache_valid_9 cache_valid_10 cache_valid_11 cache_valid_12 cache_valid_13 cache_valid_14 cache_valid_15 cache_valid_16 cache_valid_17 cache_valid_18 cache_valid_19 cache_valid_20 cache_valid_21 cache_valid_22 cache_valid_23 cache_valid_24 cache_valid_25 cache_valid_26 cache_valid_27 cache_valid_28 cache_valid_29 cache_valid_30 cache_valid_31}

prove -bg -all